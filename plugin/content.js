const clsprefix = 'chrome-plugin-gpt-prompt';
const language = localStorage.getItem(`${clsprefix}-lang`) || 'chinese';

// 创建侧边栏
var sidebar = document.createElement('div');
sidebar.className = `${clsprefix}-sidebar`;
// 创建container
var containers = document.createElement('div');
containers.className = `${clsprefix}-containers`;

const icons = {
    setting: `<svg t="1683962743933" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="33213" width="36" height="36"><path d="M785.07008 238.92992V204.8a34.24256 34.24256 0 0 0-34.14016-34.12992H614.4A34.24256 34.24256 0 0 0 580.27008 204.8v34.12992H102.4V307.2h477.87008v34.12992c0 18.76992 15.36 34.12992 34.12992 34.12992h136.52992c18.76992 0 34.14016-15.36 34.14016-34.12992V307.2H921.6v-68.27008H785.07008zM716.8 307.2h-68.27008v-68.27008H716.8V307.2zM443.72992 477.87008v-34.12992C443.72992 424.96 428.36992 409.6 409.6 409.6H273.07008a34.24256 34.24256 0 0 0-34.14016 34.12992v34.12992H102.4v68.27008h136.52992v34.11968a34.24256 34.24256 0 0 0 34.14016 34.14016H409.6c18.76992 0 34.12992-15.36 34.12992-34.14016v-34.11968H921.6v-68.27008H443.72992z m-68.25984 68.27008H307.2v-68.27008h68.27008v68.27008zM716.8 716.8v-34.14016a34.23232 34.23232 0 0 0-34.12992-34.11968H546.12992A34.23232 34.23232 0 0 0 512 682.65984V716.8H102.4v68.25984h409.6V819.2a34.2528 34.2528 0 0 0 34.12992 34.14016h136.54016A34.2528 34.2528 0 0 0 716.8 819.2v-34.14016h204.8V716.8H716.8z m-68.27008 68.25984h-68.25984V716.8h68.25984v68.25984z" p-id="33214"></path></svg>`,
    masks: `<svg t="1683803816634" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1554" width="48" height="48"><path d="M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z" fill="#28A5C6" p-id="1555"></path><path d="M556.8 494.4c32.8 114.4-16 236.8-108.8 273.6-92.8 36-212-21.6-264.8-128l-37.6-75.2c-52.8-106.4-5.6-228.8 104.8-272l22.4-8.8c110.4-43.2 228 15.2 260.8 129.6l23.2 80.8z" fill="#FF4848" p-id="1556"></path><path d="M447.2 700.8c-92.8 36-212-21.6-264.8-128l-37.6-75.2c-9.6-18.4-15.2-37.6-18.4-56.8-7.2 40-1.6 83.2 18.4 124l37.6 75.2c52.8 106.4 172 164 264.8 128 82.4-32 130.4-132 116.8-234.4-9.6 76-52.8 142.4-116.8 167.2z" fill="#EA291C" p-id="1557"></path><path d="M532.8 412.8c-16.8-57.6-54.4-100.8-102.4-124-34.4 35.2-56 84-56 139.2l-0.8 126.4c-0.8 81.6 40 156.8 100 199.2 75.2-47.2 111.2-156.8 81.6-259.2l-22.4-81.6z" fill="#EA291C" p-id="1558"></path><path d="M387.2 784c-85.6 0-172-56.8-214.4-141.6l-37.6-75.2c-27.2-52.8-30.4-111.2-9.6-164.8 20.8-52.8 63.2-94.4 119.2-116l22.4-8.8c25.6-9.6 51.2-14.4 77.6-14.4 91.2 0 169.6 59.2 195.2 148l23.2 80.8c34.4 117.6-16.8 243.2-114.4 280-18.4 8-40 12-61.6 12z m-42.4-504c-24 0-48.8 4.8-72 13.6l-22.4 8.8C199.2 321.6 160 360 140.8 408.8c-19.2 48.8-16 102.4 8.8 152l37.6 75.2c40 79.2 120.8 132.8 200 132.8 20 0 39.2-3.2 56.8-10.4 89.6-34.4 136.8-152 104.8-261.6l-24-80.8c-23.2-81.6-96-136-180-136z" fill="#074370" p-id="1559"></path><path d="M320 696c-4 0-8-3.2-8-8-2.4-42.4 22.4-81.6 62.4-97.6 40-15.2 84.8-4 111.2 29.6 3.2 3.2 2.4 8.8-0.8 11.2-3.2 3.2-8.8 2.4-11.2-0.8-22.4-28-60-37.6-92.8-24.8s-53.6 45.6-52 81.6c0 4.8-4 8.8-8.8 8.8 0.8 0 0 0 0 0zM200 528c-3.2 0-5.6-1.6-7.2-4-2.4-4-0.8-8.8 3.2-10.4l64-32c4-2.4 8.8-0.8 11.2 3.2 2.4 4 0.8 8.8-3.2 10.4l-64 32c-0.8 0.8-2.4 0.8-4 0.8zM392 448c-3.2 0-6.4-2.4-7.2-6.4-0.8-4 1.6-8.8 5.6-9.6l65.6-17.6c4-0.8 8 1.6 9.6 5.6 0.8 4-1.6 8.8-5.6 9.6L393.6 448H392z" fill="#074370" p-id="1560"></path><path d="M856.8 598.4c-22.4 116.8-128 204-235.2 193.6-107.2-10.4-194.4-116-193.6-235.2l0.8-126.4C428.8 312 525.6 224 644 236l60.8 5.6c118.4 11.2 196.8 116 174.4 232.8l-22.4 124z" fill="#FBD000" p-id="1561"></path><path d="M880 416l-23.2 124c-22.4 116.8-128 204-235.2 193.6-104-10.4-188.8-108.8-193.6-223.2v47.2c-0.8 118.4 86.4 224 193.6 234.4 107.2 10.4 212.8-76.8 235.2-193.6l23.2-124c4.8-23.2 4.8-46.4 1.6-68-0.8 3.2-0.8 6.4-1.6 9.6z" fill="#F4B10B" p-id="1562"></path><path d="M640.8 800c-6.4 0-12 0-18.4-0.8-112.8-11.2-207.2-120-206.4-243.2V428.8C416.8 313.6 511.2 224 625.6 224c7.2 0 14.4 0 21.6 0.8l61.6 5.6c60 5.6 112 34.4 147.2 80.8 34.4 46.4 48 104 36.8 162.4l-24 124.8C846.4 711.2 746.4 800 640.8 800z m-15.2-560C520 240 432.8 323.2 432 428.8v126.4c-0.8 115.2 87.2 217.6 192 227.2 5.6 0.8 11.2 0.8 16.8 0.8 98.4 0 192-82.4 212-188l24-124.8c10.4-54.4-1.6-108-33.6-150.4-32-42.4-80-68.8-135.2-74.4l-61.6-5.6h-20.8z" fill="#074370" p-id="1563"></path><path d="M635.2 704c-3.2 0-6.4 0-9.6-0.8-44-4-79.2-35.2-88.8-78.4-0.8-4 1.6-8 5.6-9.6 4-0.8 8 1.6 9.6 5.6 8 36 38.4 62.4 75.2 66.4 36.8 3.2 72-16.8 86.4-50.4 1.6-4 6.4-5.6 10.4-4 4 1.6 5.6 6.4 4 10.4-16.8 37.6-53.6 60.8-92.8 60.8zM505.6 442.4c-4 0-8-3.2-8-8s3.2-8 8-8l75.2-1.6c4 0 8 3.2 8 8s-3.2 8-8 8l-75.2 1.6zM800 472h-1.6l-72-16c-4-0.8-7.2-4.8-5.6-9.6 0.8-4 4.8-7.2 9.6-6.4l72 16c4 0.8 7.2 4.8 5.6 9.6-0.8 4-4 6.4-8 6.4z" fill="#074370" p-id="1564"></path><path d="M168 432c-0.8 0-2.4 0-3.2-0.8-4-1.6-6.4-6.4-4.8-10.4 0.8-0.8 50.4-114.4 192-116.8 4 0 8 3.2 8 8 0 4-3.2 8-8 8-130.4 2.4-174.4 103.2-176 107.2-1.6 3.2-4.8 4.8-8 4.8z" fill="#FFFFFF" opacity=".5" p-id="1565"></path><path d="M838.4 464h-0.8c-4.8-0.8-8-4.8-7.2-8.8 2.4-22.4 0.8-44-4.8-63.2-1.6-4 1.6-8.8 5.6-9.6 4.8-1.6 9.6 1.6 10.4 5.6 6.4 21.6 8.8 44.8 5.6 69.6-0.8 3.2-4.8 6.4-8.8 6.4zM816 360c-2.4 0-4.8-1.6-6.4-4-17.6-28-45.6-48-83.2-58.4-13.6-4-26.4-7.2-39.2-8.8-4.8-0.8-7.2-4.8-7.2-9.6 0.8-4.8 4.8-8 8.8-7.2 13.6 2.4 27.2 5.6 41.6 9.6 40.8 12 72 33.6 92 65.6 2.4 4 1.6 8.8-2.4 12-0.8 0-2.4 0.8-4 0.8z" fill="#FFFFFF" p-id="1566"></path><path d="M384 176c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM688 896c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM226.4 788c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c6.4-1.6 9.6-4 9.6-7.2zM490.4 892c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c6.4-1.6 9.6-4 9.6-7.2zM694.4 116c0-3.2-3.2-6.4-8-7.2l-14.4-1.6c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c5.6-2.4 8.8-4.8 8.8-8z" fill="#FFFFFF" opacity=".5" p-id="1567"></path></svg>`,
    init: `<svg t="1683891847181" class="icon" viewBox="0 0 1152 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2577" width="128" height="128"><path d="M1093.919316 318.464441a28.479982 28.479982 0 0 1 23.199986 1.791999 29.215982 29.215982 0 0 1 14.335991 18.655988A699.519563 699.519563 0 0 1 1151.99928 508.288322C1151.99928 784.32015 997.631376 1008.00001 807.199496 1008.00001c-142.719911 0-265.215834-125.727921-317.599802-304.927809 46.463971-23.743985 88.639945-59.679963 124.799922-105.279935 11.935993 10.591993 30.463981 17.503989 51.519968 17.503989 36.159977 0 65.407959-43.167973 65.407959-67.903957 0-24.735985-29.279982-21.663986-65.407959-21.663987-1.375999 0-2.655998 0.224-4.031998 0.256a636.447602 636.447602 0 0 0 63.359961-171.007893c26.431983 1.727999 53.695966 2.815998 81.951949 2.815998 116.319927 0 219.711863-15.39199 286.71982-39.359975z m-286.71982 370.495768c-77.855951 0-140.991912 64.15996-140.991912 143.295911 0 10.303994 1.375999 20.223987 3.615997 29.823981a7.679995 7.679995 0 0 0 12.447993 4.191998c26.847983-22.911986 72.511955-38.175976 124.927922-38.175977s98.111939 15.26399 124.959921 38.175977a7.551995 7.551995 0 0 0 7.359996 1.439999 7.775995 7.775995 0 0 0 5.119997-5.631997c2.207999-9.599994 3.551998-19.519988 3.583997-29.823981 0-79.135951-63.135961-143.29591-140.991912-143.295911zM642.623598 0.00064c4.735997 0 9.407994 1.151999 13.631992 3.455998a29.215982 29.215982 0 0 1 14.399991 18.655988 697.919564 697.919564 0 0 1 20.575987 169.375894c0 275.999828-154.719903 499.711688-345.599784 499.711688C154.719903 691.200208 0 467.488348 0 191.48852c0-59.519963 7.359995-116.479927 20.575987-169.375894a29.311982 29.311982 0 0 1 14.399991-18.623988 28.799982 28.799982 0 0 1 23.231986-1.823999C125.439922 25.600624 229.023857 40.960614 345.599784 40.960614S565.823646 25.600624 632.959604 1.600639a28.415982 28.415982 0 0 1 9.599994-1.631999z m305.919809 525.727671c-36.159977 0-65.439959-3.071998-65.439959 21.663987s29.279982 67.903958 65.439959 67.903957c36.127977 0 65.407959-20.031987 65.407959-44.799972 0-24.735985-29.279982-44.799972-65.407959-44.799972z m-470.271706-107.743932a7.583995 7.583995 0 0 0-7.359995 1.407999c-26.943983 22.943986-72.735955 38.175976-125.279922 38.175976s-98.335939-15.23199-125.247922-38.175976a7.679995 7.679995 0 0 0-12.479992 4.223997c-2.239999 9.599994-3.583998 19.519988-3.583998 29.823982 0 79.135951 63.26396 143.29591 141.311912 143.29591 78.079951 0 141.311912-64.15996 141.311912-143.29591 0-10.303994-1.375999-20.223987-3.583998-29.823982a7.807995 7.807995 0 0 0-5.087997-5.631996z m-274.239829-209.18387c-36.255977 0-65.599959 20.063987-65.599959 44.799972 0 24.735985 29.343982 44.799972 65.599959 44.799972 36.191977 0 65.567959 3.071998 65.56796-21.695986 0-24.735985-29.375982-67.903958-65.599959-67.903958z m283.199823 0c-36.191977 0-65.567959 43.199973-65.567959 67.903958 0 24.767985 29.375982 21.695986 65.599959 21.695986 36.223977 0 65.599959-20.063987 65.599959-44.799972 0-24.735985-29.375982-44.799972-65.599959-44.799972z" fill="#D8D8D8" p-id="2578"></path></svg>`,
    text: `<svg t="1683934617607" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="9153" width="128" height="128"><path d="M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z" fill="#75B600" p-id="9154"></path><path d="M760 784l-8-544c0-22.4-17.6-40-40-40H272c-22.4 0-40 17.6-40 40 0 0 0 580 0.8 582.4 3.2 19.2 19.2 33.6 39.2 33.6h72v32l48-24 48 24v-32h352l-32-72z" fill="#628C07" p-id="9155"></path><path d="M790.4 736h-480c-32 0-40 24-40 24V216c0-22.4 17.6-40 40-40h440c22.4 0 40 17.6 40 40v520z" fill="#F74541" p-id="9156"></path><path d="M318.4 176h-8c-22.4 0-40 17.6-40 40v544s8-24 40-24h8V176z" fill="#E8372E" p-id="9157"></path><path d="M272 776h-1.6c-4-0.8-6.4-4-6.4-8V216c0-27.2 20-48 46.4-48h440c27.2 0 49.6 21.6 49.6 48v520c0 4.8-3.2 8-8 8H326.4c-34.4 0-47.2 27.2-47.2 27.2-1.6 3.2-4 4.8-7.2 4.8z m38.4-592c-16.8 0-30.4 14.4-30.4 32v528.8c9.6-8.8 24.8-16.8 46.4-16.8H784V216c0-16.8-16-32-33.6-32h-440z" fill="#A03513" p-id="9158"></path><path d="M790.4 736h-480c-22.4 0-40 17.6-40 40v16c0 22.4 17.6 40 40 40h480s-24-16-24-48 24-48 24-48z" fill="#EAEAEA" p-id="9159"></path><path d="M310.4 776h456.8c3.2-26.4 23.2-40 23.2-40h-480c-22.4 0-40 17.6-40 40v16c0 4 0.8 8 2.4 12 4.8-16 20-28 37.6-28z" fill="#D4D6D6" p-id="9160"></path><path d="M792 840H310.4c-26.4 0-46.4-20.8-46.4-48v-16c0-27.2 20.8-48 46.4-48H792c3.2 0 6.4 2.4 8 5.6 0.8 3.2 0 7.2-3.2 8.8-0.8 0.8-20.8 14.4-20.8 41.6s20 40.8 20.8 41.6c3.2 1.6 4 5.6 3.2 8.8-1.6 3.2-4.8 5.6-8 5.6zM310.4 744c-16.8 0-30.4 14.4-30.4 32v16c0 17.6 13.6 32 30.4 32h462.4c-6.4-8.8-12.8-22.4-12.8-40s6.4-31.2 12.8-40H310.4z" fill="#A03513" p-id="9161"></path><path d="M720 792H320c-4.8 0-8-3.2-8-8s4-8 8-8h400c4.8 0 8 3.2 8 8s-4 8-8 8z" fill="#A03513" p-id="9162"></path><path d="M478.4 864l-48-24-48 24V784h96z" fill="#F74541" p-id="9163"></path><path d="M384 872c-1.6 0-3.2 0-4-0.8-2.4-1.6-4-4-4-7.2V784c0-4.8 3.2-8 8-8h96c4.8 0 8 3.2 8 8v80c0 2.4-1.6 5.6-4 6.4-2.4 1.6-5.6 1.6-8 0.8l-46.4-22.4-42.4 22.4c-0.8 0.8-1.6 0.8-3.2 0.8z m46.4-40c0.8 0 2.4 0 3.2 0.8l38.4 18.4V792H392v59.2l34.4-17.6c1.6-1.6 2.4-1.6 4-1.6z" fill="#A03513" p-id="9164"></path><path d="M752 512c0-4-3.2-8-8-8s-8 3.2-8 8v80c0 4.8 3.2 8 8 8 4 0 8-3.2 8-8V512zM744 464c-4.8 0-8-3.2-8-8V260c0-17.6-1.6-28-28-28H480c-4.8 0-8-3.2-8-8s3.2-8 8-8h228c38.4 0 44 22.4 44 44V456c0 4.8-3.2 8-8 8zM431.2 232H384c-4.8 0-8.8-3.2-8.8-8s4-8 8.8-8h47.2c4.8 0 8.8 3.2 8.8 8s-4 8-8.8 8z" fill="#FFFFFF" opacity=".5" p-id="9165"></path><path d="M504 392H416c-4.8 0-8-3.2-8-8s3.2-8 8-8h88c4.8 0 8 3.2 8 8s-3.2 8-8 8zM632 392H542.4c-4.8 0-8-3.2-8-8s4-8 8-8H632c4.8 0 8 3.2 8 8s-4 8-8 8zM552 440H416c-4.8 0-8-3.2-8-8s3.2-8 8-8h136c4.8 0 8 3.2 8 8s-3.2 8-8 8z" fill="#FFFFFF" p-id="9166"></path><path d="M552 120c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM884 664c-15.2 0-28-12.8-28-28s12.8-28 28-28 28 12.8 28 28-12.8 28-28 28z m0-43.2c-8 0-15.2 6.4-15.2 15.2 0 8 6.4 15.2 15.2 15.2 8 0 15.2-6.4 15.2-15.2 0-8-7.2-15.2-15.2-15.2zM176 455.2c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-13.6 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c4-1.6 7.2-4 7.2-7.2zM944 441.6c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c5.6-1.6 8.8-4.8 8.8-7.2z" fill="#FFFFFF" opacity=".5" p-id="9167"></path></svg>`,
    code: `<svg t="1683934725069" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="9326" width="128" height="128"><path d="M1024 512c0 282.4-229.6 512-512 512S0 794.4 0 512 240.8 0 512 0c282.4 0 512 229.6 512 512z" fill="#28A5C6" p-id="9327"></path><path d="M200 584c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zM384 248c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zM856 528c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zM239.2 320c0-3.2-3.2-6.4-8-7.2l-15.2-1.6c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c4.8-1.6 8.8-4.8 8.8-8zM751.2 669.6c0-3.2-3.2-6.4-8-7.2l-15.2-1.6c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c4.8-1.6 8.8-4.8 8.8-8z" fill="#FFFFFF" opacity=".5" p-id="9328"></path><path d="M696 856H256c-4 0-8-3.2-8-8s3.2-8 8-8h440c4 0 8 3.2 8 8s-3.2 8-8 8z" fill="#0C508E" p-id="9329"></path><path d="M315.2 584.8L656 58.4c20.8-33.6 64.8-43.2 98.4-22.4l90.4 56.8c33.6 20.8 43.2 64.8 22.4 98.4L528.8 712" fill="#FBD000" p-id="9330"></path><path d="M844.8 92l-44-27.2c16.8 23.2 18.4 55.2 2.4 80.8L461.6 672l67.2 40 338.4-521.6c20.8-33.6 10.4-77.6-22.4-98.4z" fill="#F4B10B" p-id="9331"></path><path d="M842.4 228.8l24.8-38.4c20.8-33.6 10.4-77.6-22.4-98.4l-91.2-56C720.8 15.2 676.8 25.6 656 58.4l-26.4 41.6 212.8 128.8z" fill="#F74541" p-id="9332"></path><path d="M844.8 92l-44-27.2c16.8 23.2 18.4 55.2 2.4 80.8L776 188l67.2 40 24.8-38.4c20-32.8 9.6-76.8-23.2-97.6z" fill="#EA291C" p-id="9333"></path><path d="M527.2 720c-1.6 0-3.2-0.8-4-1.6-4-2.4-4.8-7.2-2.4-11.2l341.6-522.4c8.8-14.4 12-31.2 8-48s-13.6-30.4-28-39.2l-92-56c-14.4-8.8-31.2-12-48-8s-30.4 13.6-40 28l-344 526.4c-2.4 4-7.2 4.8-11.2 2.4-4-2.4-4.8-7.2-2.4-11.2l344-525.6c23.2-36.8 72.8-48 110.4-25.6l91.2 56.8c18.4 11.2 30.4 28.8 35.2 49.6 4.8 20.8 1.6 41.6-9.6 60L534.4 716c-1.6 2.4-4 4-7.2 4z" fill="#0C508E" p-id="9334"></path><path d="M834.4 276.8c-4.8 7.2-14.4 9.6-22.4 4.8L597.6 148c-7.2-4.8-9.6-14.4-4.8-22.4l16-25.6c4.8-7.2 14.4-9.6 22.4-4.8l214.4 133.6c7.2 4.8 9.6 14.4 4.8 22.4l-16 25.6zM524 720c11.2-20 5.6-47.2-14.4-59.2-16-10.4-36-8-49.6 3.2 4-17.6-2.4-36-18.4-46.4-16-10.4-36-8-49.6 3.2 4-17.6-2.4-36-18.4-46.4-19.2-12-47.2-5.6-60 12.8l13.6 212.8 196.8-80z" fill="#EAEAEA" p-id="9335"></path><path d="M845.6 228.8L792 196c3.2 5.6 4 12 0 18.4l-16.8 27.2c-4 5.6-10.4 8.8-16.8 8l53.6 33.6c7.2 4.8 17.6 2.4 22.4-4.8l16-25.6c4.8-8.8 2.4-19.2-4.8-24zM524 720c11.2-20 5.6-47.2-14.4-59.2-11.2-7.2-24.8-8-36-4-2.4 1.6-3.2 2.4-3.2 2.4l-144 142.4L524 720z" fill="#C1C1C1" p-id="9336"></path><path d="M321.6 721.6l4.8 80 72-29.6c-1.6-2.4-2.4-4-2.4-4l-71.2-45.6-3.2-0.8z" fill="#F74541" p-id="9337"></path><path d="M396 775.2c-1.6 0-3.2-0.8-4-1.6L320.8 728c-4-2.4-4.8-7.2-2.4-11.2 2.4-4 7.2-4.8 11.2-2.4l71.2 45.6c4 2.4 4.8 7.2 2.4 11.2-1.6 2.4-4 4-7.2 4zM822.4 296c-4.8 0-8.8-1.6-12.8-4L588 152.8c-5.6-3.2-9.6-8.8-11.2-15.2-1.6-6.4-0.8-13.6 3.2-19.2l16.8-26.4c4.8-7.2 12.8-12 20.8-12 4.8 0 8.8 1.6 12.8 4l221.6 139.2c5.6 3.2 9.6 8.8 11.2 15.2 1.6 6.4 0.8 13.6-3.2 19.2l-16.8 26.4c-4 8-12 12-20.8 12zM617.6 96.8c-3.2 0-5.6 1.6-7.2 4l-16.8 26.4c-0.8 1.6-1.6 4-0.8 6.4 0.8 2.4 1.6 4 4 4.8l221.6 139.2c4 2.4 8.8 0.8 11.2-2.4l16.8-26.4c0.8-1.6 1.6-4 0.8-6.4-0.8-2.4-1.6-4-4-4.8L621.6 97.6c-0.8-0.8-2.4-0.8-4-0.8z" fill="#0C508E" p-id="9338"></path><path d="M325.6 808c-1.6 0-3.2-0.8-4-1.6-2.4-1.6-3.2-4-4-6.4L304 588.8c0-1.6 0-3.2 1.6-4.8 9.6-13.6 26.4-22.4 44.8-22.4 9.6 0 18.4 2.4 26.4 7.2 13.6 8.8 22.4 23.2 23.2 38.4 14.4-5.6 31.2-4 44.8 4 13.6 8.8 22.4 23.2 23.2 38.4 14.4-5.6 31.2-4 44.8 4 23.2 14.4 30.4 46.4 16.8 70.4-0.8 1.6-2.4 2.4-4 3.2L328.8 808h-3.2zM320 590.4l12.8 197.6 184-75.2c8-16 2.4-36.8-12.8-46.4-12-8-28.8-6.4-40 3.2-2.4 2.4-6.4 2.4-9.6 0.8-3.2-1.6-4-5.6-3.2-8.8 3.2-14.4-2.4-29.6-15.2-37.6-12-8-28.8-6.4-40 3.2-2.4 2.4-6.4 2.4-9.6 0.8-3.2-1.6-4-5.6-3.2-8.8 3.2-14.4-2.4-29.6-15.2-37.6-4.8-3.2-11.2-4.8-17.6-4.8-12 0-23.2 5.6-30.4 13.6z" fill="#0C508E" p-id="9339"></path><path d="M392 632c-1.6 0-3.2-0.8-4-1.6-4-2.4-4.8-7.2-2.4-11.2l280-424c2.4-4 7.2-4.8 11.2-2.4 4 2.4 4.8 7.2 2.4 11.2l-280 424c-2.4 2.4-4.8 4-7.2 4zM743.2 235.2c-4-2.4-8.8-1.6-11.2 2.4L449.6 659.2c-2.4 4-1.6 8.8 2.4 11.2 1.6 0.8 3.2 1.6 4 1.6 2.4 0 4.8-0.8 6.4-3.2l283.2-421.6c2.4-4 1.6-9.6-2.4-12z" fill="#0C508E" p-id="9340"></path><path d="M381.6 542.4c-1.6 0-3.2-0.8-4-1.6-4-2.4-4.8-7.2-2.4-11.2L528 291.2c2.4-4 7.2-4.8 11.2-2.4 4 2.4 4.8 7.2 2.4 11.2L388.8 538.4c-1.6 2.4-4.8 4-7.2 4zM560.8 263.2c-1.6 0-3.2-0.8-4-1.6-4-2.4-4.8-7.2-2.4-11.2l40.8-63.2c2.4-4 7.2-4.8 11.2-2.4 4 2.4 4.8 7.2 2.4 11.2l-40.8 64c-1.6 2.4-4.8 3.2-7.2 3.2z" fill="#FFFFFF" p-id="9341"></path></svg>`,
    brain: `<svg t="1683809642703" class="icon" viewBox="0 0 1025 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="9450" width="48" height="48"><path d="M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z" fill="#FBD000" p-id="9451"></path><path d="M129.6 576c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 7.2 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM880.8 663.2c-17.6 0-31.2-14.4-31.2-31.2 0-17.6 14.4-31.2 31.2-31.2 17.6 0 31.2 14.4 31.2 31.2 0.8 16.8-13.6 31.2-31.2 31.2z m0-48.8c-9.6 0-16.8 7.2-16.8 16.8 0 9.6 7.2 16.8 16.8 16.8 9.6 0 16.8-7.2 16.8-16.8 0-8.8-7.2-16.8-16.8-16.8zM432.8 951.2c-17.6 0-31.2-14.4-31.2-31.2 0-17.6 14.4-31.2 31.2-31.2 17.6 0 31.2 14.4 31.2 31.2 0.8 16.8-13.6 31.2-31.2 31.2z m0-48.8c-9.6 0-16.8 7.2-16.8 16.8 0 9.6 7.2 16.8 16.8 16.8 9.6 0 16.8-7.2 16.8-16.8 0-8.8-7.2-16.8-16.8-16.8zM383.2 136.8c-19.2 0-34.4-15.2-34.4-34.4s15.2-34.4 34.4-34.4 34.4 15.2 34.4 34.4c-0.8 19.2-16 34.4-34.4 34.4z m0-52c-10.4 0-18.4 8-18.4 18.4 0 10.4 8 18.4 18.4 18.4 10.4 0 18.4-8 18.4-18.4-0.8-10.4-8.8-18.4-18.4-18.4zM771.2 272.8c0-3.2 3.2-6.4 8-7.2L793.6 264c4-0.8 8.8-4.8 8.8-8.8l2.4-15.2c0.8-4 4-8 7.2-8s6.4 3.2 7.2 8l2.4 15.2c0.8 4 4.8 8.8 8.8 8.8l15.2 2.4c4 0.8 8 4 8 7.2s-3.2 6.4-8 7.2l-15.2 2.4c-4 0.8-8.8 4.8-8.8 8.8l-2.4 15.2c-0.8 4-4 8-7.2 8s-6.4-3.2-7.2-8l-2.4-16.8c-0.8-4-4.8-8-8.8-8.8l-14.4-0.8c-4.8-1.6-8-4.8-8-8zM152 772c0-3.2 3.2-6.4 8-7.2l15.2-2.4c4-0.8 8.8-4.8 8.8-8.8l2.4-15.2c0.8-4 4-8 7.2-8s6.4 3.2 7.2 8l2.4 15.2c0.8 4 4.8 8.8 8.8 8.8l15.2 2.4c4 0.8 8 4 8 7.2s-3.2 6.4-8 7.2l-15.2 2.4c-4 0.8-8.8 4.8-8.8 8.8l-2.4 15.2c-0.8 4-4 8-7.2 8s-6.4-3.2-7.2-8l-2.4-16.8c-0.8-4-4.8-8-8.8-8.8l-14.4-0.8c-4.8-1.6-8.8-4-8.8-7.2zM683.2 832.8c0-3.2 3.2-6.4 8-7.2l15.2-2.4c4-0.8 8.8-4.8 8.8-8.8l2.4-15.2c0.8-4 4-8 7.2-8s6.4 3.2 7.2 8l2.4 15.2c0.8 4 4.8 8.8 8.8 8.8l15.2 2.4c4 0.8 8 4 8 7.2s-3.2 6.4-8 7.2l-15.2 2.4c-4 0.8-8.8 4.8-8.8 8.8l-2.4 15.2c-0.8 4-4 8-7.2 8s-6.4-3.2-7.2-8l-2.4-16.8c-0.8-4-4.8-8-8.8-8.8l-14.4-0.8c-4.8-0.8-8.8-4-8.8-7.2z" fill="#FFFFFF" p-id="9452"></path><path d="M348 635.2v117.6c0 12 9.6 22.4 21.6 22.4l229.6 80c12 0 21.6-9.6 21.6-22.4V707.2s33.6 3.2 65.6 0c32-3.2 56-36.8 56-60.8s4.8-76 4.8-76l56.8-32.8c11.2-6.4 14.4-20 8-31.2 0 0-35.2-60.8-55.2-96-4-6.4-7.2-18.4-9.6-28.8-0.8-8-2.4-15.2-4-22.4v-1.6c-27.2-113.6-130.4-198.4-252.8-198.4-144 0-260 116-260 260 0.8 89.6 47.2 169.6 117.6 216z" fill="#3AD0F9" p-id="9453"></path><path d="M484.8 638.4C661.6 682.4 736.8 664 736.8 664s-5.6 49.6-118.4 42.4V768s-69.6-14.4-148-54.4-124-74.4-124-74.4l6.4-3.2c-33.6-20-60-43.2-74.4-72.8-41.6-84-44-96-44-96s77.6 128 250.4 171.2z" fill="#00B3F9" p-id="9454"></path><path d="M604.8 864c-1.6 0-4 0-5.6-0.8-13.6-3.2-218.4-75.2-230.4-80-8-3.2-27.2-10.4-27.2-29.6V640.8C268.8 590.4 225.6 508 225.6 420 225.6 272 345.6 152 492.8 152c80.8 0 147.2 26.4 196 78.4 50.4 53.6 65.6 118.4 64.8 129.6-0.8 15.2 7.2 51.2 10.4 56 19.2 33.6 56.8 85.6 56.8 85.6s0 0.8 0.8 0.8c4 7.2 5.6 15.2 3.2 23.2-2.4 8-7.2 14.4-14.4 18.4l-52.8 32c0 13.6-0.8 52.8-4.8 73.6-5.6 29.6-28 64-63.2 67.2-9.6 0.8-20.8 1.6-32 1.6s-20-0.8-26.4-0.8v116c0 7.2-2.4 14.4-6.4 20-5.6 6.4-12 10.4-20 10.4z m-112-696C354.4 168 241.6 280.8 241.6 420c0 84.8 42.4 163.2 113.6 210.4 2.4 1.6 3.2 4 3.2 6.4v116.8c0 5.6 4.8 10.4 16.8 14.4 11.2 4 215.2 76.8 228 79.2h2.4c2.4 0 4.8-1.6 6.4-4 2.4-3.2 3.2-7.2 3.2-10.4V708.8c0-2.4 0.8-4 2.4-5.6 1.6-1.6 4-2.4 6.4-2.4 0 0 15.2 1.6 33.6 1.6 11.2 0 21.6-0.8 30.4-1.6 28.8-3.2 44.8-34.4 48.8-54.4 4.8-22.4 4.8-74.4 4.8-74.4 0-3.2 1.6-5.6 4-7.2l56.8-32.8c3.2-1.6 5.6-4.8 7.2-8.8 0.8-4 0.8-8-1.6-11.2-4-4.8-38.4-53.6-57.6-87.2-4.8-8.8-13.6-47.2-12.8-65.6 0-5.6-11.2-65.6-60.8-118.4-45.6-48-107.2-72.8-184-72.8z" fill="#0C508E" p-id="9455"></path><path d="M298.4 348c0-36 29.6-65.6 65.6-65.6 3.2 0 5.6 0 8.8 0.8 6.4-28.8 32.8-50.4 64-50.4 3.2 0 6.4 0 9.6 0.8 8-7.2 18.4-11.2 30.4-11.2 8.8 0 16.8 2.4 24 7.2 11.2-4.8 23.2-8 36-8 28 0 52 13.6 67.2 33.6 1.6 0 4-0.8 5.6-0.8 16.8 0 31.2 12.8 32.8 29.6 19.2 11.2 32 32 32 56 0 20-8.8 38.4-23.2 50.4v4c0 23.2-17.6 42.4-40 45.6-10.4 22.4-32.8 37.6-59.2 37.6-8.8 0-16.8-1.6-24-4.8-6.4 8-15.2 12.8-25.6 12.8-9.6 0-18.4-4.8-24.8-11.2-7.2 3.2-15.2 4.8-24 4.8-5.6 0-11.2-0.8-16.8-2.4-3.2 7.2-7.2 17.6-7.2 31.2 0 26.4-7.2 32-17.6 15.2-8-12.8-16.8-28-22.4-43.2-2.4 0-4.8 0.8-7.2 0.8-36 0-65.6-29.6-65.6-65.6 0-6.4 0.8-12.8 3.2-19.2-13.6-12-21.6-28.8-21.6-48z" fill="#FFFFFF" p-id="9456"></path><path d="M431.2 362.4l4 14.4-9.6 9.6c1.6 4 4 8 6.4 11.2l12.8-3.2 10.4 10.4-3.2 12.8c4 2.4 7.2 4.8 11.2 6.4l9.6-9.6 14.4 4 3.2 12.8h12.8l3.2-12.8 14.4-4 9.6 9.6c4-1.6 8-4 11.2-6.4l-3.2-12.8 10.4-10.4 12.8 3.2c2.4-4 4.8-7.2 6.4-11.2l-7.2-10.4 4-14.4 12.8-3.2v-13.6l-12.8-3.2-4-14.4 9.6-9.6c-1.6-4-4-8-6.4-11.2l-12.8 3.2-10.4-10.4 3.2-12.8c-4-2.4-7.2-4.8-11.2-6.4L521.6 288.8l-14.4-4-3.2-12.8h-12.8l-3.2 12.8-14.4 4-10.4-8.8c-4 1.6-8 4-11.2 6.4l3.2 12.8-10.4 10.4-12.8-3.2c-2.4 4-4.8 7.2-6.4 11.2l9.6 9.6-4 14.4-13.6 4v13.6l13.6 3.2z m28-20.8c5.6-21.6 27.2-33.6 48.8-28 21.6 5.6 33.6 28 28 48.8-5.6 21.6-27.2 33.6-48.8 28-20.8-5.6-33.6-27.2-28-48.8z" fill="#0C508E" p-id="9457"></path><path d="M422.4 540.8c-8 0-13.6-7.2-16.8-12.8-8.8-13.6-16-27.2-20.8-39.2h-2.4c-40.8 0-73.6-32.8-73.6-73.6 0-5.6 0.8-11.2 1.6-16.8a72.8 72.8 0 0 1-20-50.4c0-40.8 32.8-73.6 73.6-73.6h3.2c9.6-29.6 37.6-50.4 69.6-50.4h7.2c16-12 39.2-14.4 57.6-5.6 11.2-4.8 23.2-7.2 35.2-7.2 28 0 53.6 12 71.2 33.6h2.4c20 0 36 13.6 40 32.8 20.8 13.6 32.8 36 32.8 60.8 0 20-8.8 39.2-23.2 53.6v0.8c0 25.6-18.4 47.2-42.4 52.8-12.8 24-37.6 38.4-64.8 38.4-7.2 0-14.4-0.8-21.6-3.2-8 7.2-17.6 11.2-28 11.2-9.6 0-19.2-4-27.2-10.4-11.2 3.2-22.4 4-33.6 2.4-2.4 7.2-4 14.4-4 21.6-0.8 10.4-0.8 35.2-16 35.2zM389.6 472c3.2 0 6.4 2.4 7.2 4.8 4.8 12.8 12 26.4 21.6 41.6 0.8 0.8 1.6 2.4 1.6 2.4 0.8-2.4 0.8-7.2 0.8-13.6 0-12 2.4-23.2 8-34.4 1.6-3.2 5.6-5.6 9.6-4 12.8 3.2 24 2.4 36-2.4 3.2-1.6 6.4 0 8.8 2.4 4.8 5.6 12 8.8 18.4 8.8 8 0 14.4-3.2 19.2-9.6 2.4-3.2 5.6-4 9.6-2.4 7.2 2.4 13.6 4 20.8 4 22.4 0 42.4-12.8 52-33.6 0.8-2.4 3.2-4 6.4-4.8 19.2-2.4 32.8-18.4 32.8-37.6v-4c0-2.4 0.8-5.6 3.2-7.2 12.8-11.2 20.8-27.2 20.8-44 0-20-10.4-38.4-28-49.6-2.4-1.6-3.2-3.2-4-6.4-1.6-12.8-12-22.4-24.8-22.4-1.6 0-2.4 0-4.8 0.8-3.2 0.8-6.4-0.8-8-3.2-14.4-19.2-36.8-30.4-60.8-30.4-11.2 0-22.4 2.4-32 7.2-2.4 0.8-5.6 0.8-7.2-0.8-13.6-8.8-32.8-7.2-44.8 4-1.6 1.6-4 2.4-6.4 1.6-3.2-0.8-5.6-0.8-8.8-0.8-27.2 0-49.6 18.4-56 44.8-0.8 4-4.8 6.4-8.8 6.4-3.2-0.8-5.6-0.8-8-0.8-32 0-57.6 25.6-57.6 57.6 0 16 6.4 31.2 18.4 41.6 2.4 2.4 3.2 5.6 2.4 8-1.6 5.6-2.4 11.2-2.4 16.8 0 32 25.6 57.6 57.6 57.6 2.4 0 4.8 0 6.4-0.8 0 2.4 0 2.4 0.8 2.4z" fill="#0C508E" p-id="9458"></path><path d="M304.8 512c-2.4 0-4.8-0.8-6.4-3.2-37.6-43.2-32-114.4-32-117.6 0.8-4.8 4.8-8 8.8-7.2 4.8 0 8 4 8 8.8 0 0.8-5.6 67.2 28 105.6 3.2 3.2 2.4 8.8-0.8 12-1.6 0.8-3.2 1.6-5.6 1.6z" fill="#FFFFFF" opacity=".5" p-id="9459"></path></svg>`,
    clipboard: `<svg t="1683939170711" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="21547" width="128" height="128"><path d="M810.666667 170.666667h-128V128a42.666667 42.666667 0 0 0-42.666667-42.666667H384a42.666667 42.666667 0 0 0-42.666667 42.666667v42.666667H213.333333a42.666667 42.666667 0 0 0-42.666666 42.666666v682.666667a42.666667 42.666667 0 0 0 42.666666 42.666667h597.333334a42.666667 42.666667 0 0 0 42.666666-42.666667V213.333333a42.666667 42.666667 0 0 0-42.666666-42.666666z m-384 0h170.666666v85.333333h-170.666666V170.666667z m341.333333 682.666666H256V256h85.333333v42.666667a42.666667 42.666667 0 0 0 42.666667 42.666666h256a42.666667 42.666667 0 0 0 42.666667-42.666666V256h85.333333v597.333333z" fill="" p-id="21548"></path></svg>`,
    knowledge: `<svg t="1683957744234" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="30927" width="128" height="128"><path d="M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z" fill="#28A5C6" p-id="30928"></path><path d="M511.2 509.6m-77.6 0a77.6 77.6 0 1 0 155.2 0 77.6 77.6 0 1 0-155.2 0Z" fill="#FBD000" p-id="30929"></path><path d="M511.2 547.2c-36 0-65.6-24-74.4-57.6-1.6 6.4-2.4 12.8-2.4 20 0 42.4 34.4 77.6 77.6 77.6 42.4 0 77.6-34.4 77.6-77.6 0-7.2-0.8-13.6-2.4-20-10.4 32.8-40.8 57.6-76 57.6z" fill="#F4B10B" p-id="30930"></path><path d="M508 592C461.6 592 424 554.4 424 508S461.6 424 508 424 592 461.6 592 508 554.4 592 508 592z m0-152c-37.6 0-68 30.4-68 68s30.4 68 68 68 68-30.4 68-68-30.4-68-68-68zM216 656c-0.8 0-2.4 0-3.2-0.8C127.2 616.8 80 564.8 80 508.8c0-85.6 110.4-160 280.8-189.6 4-0.8 8.8 2.4 9.6 6.4 0.8 4-2.4 8.8-6.4 9.6C203.2 362.4 96 432.8 96 508.8c0 49.6 44 96 123.2 132 4 1.6 5.6 6.4 4 10.4-1.6 3.2-4.8 4.8-7.2 4.8zM512 712c-86.4 0-170.4-11.2-241.6-32.8-4-1.6-6.4-5.6-5.6-9.6 1.6-4 5.6-6.4 10.4-4.8 70.4 20.8 152 32 236.8 32 21.6 0 42.4-0.8 64-2.4 4.8 0 8 3.2 8.8 7.2 0 4-3.2 8-7.2 8-22.4 1.6-44 2.4-65.6 2.4zM656 704c-4 0-7.2-3.2-8-6.4-0.8-4.8 2.4-8.8 6.4-9.6l4.8-0.8c160.8-28 268.8-100 268.8-177.6 0-50.4-43.2-97.6-121.6-133.6-4-1.6-5.6-6.4-4-11.2 1.6-4 6.4-5.6 10.4-4C897.6 400 944 452.8 944 509.6c0 87.2-110.4 163.2-281.6 193.6l-4.8 0.8H656zM744 352h-2.4c-68.8-20.8-148-32-231.2-32-22.4 0-44.8 0.8-66.4 2.4-4.8 0-8-3.2-8.8-7.2 0-4 3.2-8 7.2-8.8 22.4-1.6 44.8-2.4 67.2-2.4 84 0 165.6 11.2 236 32.8 4 1.6 6.4 5.6 5.6 9.6 0 3.2-3.2 5.6-7.2 5.6z" fill="#074370" p-id="30931"></path><path d="M544 792c-2.4 0-4-0.8-5.6-2.4-3.2-3.2-2.4-8 0-11.2 48-45.6 92.8-104.8 131.2-169.6 12.8-22.4 24.8-45.6 36-68 1.6-4 6.4-5.6 10.4-4 4 1.6 5.6 6.4 3.2 10.4-11.2 23.2-23.2 46.4-36.8 69.6-39.2 66.4-84.8 126.4-133.6 173.6-1.6 0.8-3.2 1.6-4.8 1.6zM304 486.4c-0.8 0-2.4 0-3.2-0.8-4-1.6-5.6-6.4-4-10.4 11.2-23.2 24-46.4 37.6-68.8 122.4-202.4 300-320.8 396-263.2 72.8 43.2 81.6 173.6 21.6 331.2-1.6 4-6.4 6.4-10.4 4.8-4-1.6-6.4-6.4-4.8-10.4C762.4 401.6 776 339.2 776 288c0-64-17.6-110.4-53.6-132-88.8-52.8-256.8 63.2-374.4 257.6-13.6 22.4-25.6 44.8-36.8 68-1.6 3.2-4 4.8-7.2 4.8zM348.8 892.8c-20.8 0-40-4.8-56-15.2-71.2-43.2-80-171.2-23.2-327.2 1.6-4 6.4-6.4 10.4-4.8 4 1.6 6.4 6.4 4.8 10.4-53.6 146.4-46.4 269.6 16.8 308 41.6 25.6 105.6 11.2 176-38.4 3.2-2.4 8.8-1.6 11.2 1.6 2.4 4 1.6 8.8-1.6 11.2-52 36-98.4 54.4-138.4 54.4z" fill="#074370" p-id="30932"></path><path d="M768 624c-3.2 0-7.2-2.4-8-5.6-17.6-66.4-48-137.6-89.6-205.6-12.8-20.8-25.6-40.8-39.2-59.2-2.4-3.2-1.6-8.8 1.6-11.2 3.2-2.4 8.8-1.6 11.2 1.6 14.4 19.2 27.2 40 40 60.8 41.6 68.8 73.6 141.6 91.2 209.6 0.8 4-1.6 8.8-5.6 9.6H768zM674.4 896c-72.8 0-168.8-59.2-256.8-164-3.2-3.2-2.4-8.8 0.8-11.2 3.2-3.2 8.8-2.4 11.2 0.8 107.2 128 224.8 186.4 292 146.4 41.6-25.6 60-85.6 51.2-170.4-0.8-4.8 2.4-8.8 7.2-8.8 4-0.8 8 2.4 8.8 7.2 9.6 91.2-12 157.6-59.2 186.4-15.2 8.8-34.4 13.6-55.2 13.6zM376 671.2c-2.4 0-4.8-1.6-6.4-3.2-12-17.6-24-36-35.2-55.2-44.8-75.2-76.8-153.6-94.4-227.2-0.8-4 1.6-8.8 5.6-9.6 4-0.8 8.8 1.6 9.6 6.4 16.8 72 48.8 148.8 92 222.4 11.2 18.4 22.4 36.8 34.4 54.4 2.4 4 1.6 8.8-1.6 11.2-0.8 0.8-2.4 0.8-4 0.8zM241.6 328c-4 0-7.2-3.2-8-7.2-8.8-87.2 12.8-150.4 58.4-178.4 73.6-44 193.6 12 305.6 142.4 3.2 3.2 2.4 8-0.8 11.2-3.2 3.2-8 2.4-11.2-0.8-104.8-122.4-219.2-177.6-284.8-139.2-40.8 24-59.2 82.4-51.2 163.2 0.8 4.8-2.4 8-8 8.8 0.8 0 0 0 0 0z" fill="#074370" p-id="30933"></path><path d="M636 140.8m-44.8 0a44.8 44.8 0 1 0 89.6 0 44.8 44.8 0 1 0-89.6 0Z" fill="#FF4848" p-id="30934"></path><path d="M636 156.8c-20 0-36-12.8-42.4-30.4a44.72 44.72 0 0 0 42.4 59.2c24.8 0 44.8-20 44.8-44.8 0-4.8-0.8-10.4-2.4-14.4-6.4 17.6-23.2 30.4-42.4 30.4z" fill="#E02020" p-id="30935"></path><path d="M636 192c-28.8 0-52-23.2-52-52s23.2-52 52-52 52 23.2 52 52-23.2 52-52 52z m0-88C616 104 600 120 600 140s16 36 36 36 36-16 36-36-16-36-36-36z" fill="#074370" p-id="30936"></path><path d="M768.8 812.8m-44.8 0a44.8 44.8 0 1 0 89.6 0 44.8 44.8 0 1 0-89.6 0Z" fill="#FF4848" p-id="30937"></path><path d="M768.8 828.8c-20 0-36-12.8-42.4-30.4a44.72 44.72 0 0 0 42.4 59.2c24.8 0 44.8-20 44.8-44.8 0-4.8-0.8-10.4-2.4-14.4-6.4 17.6-22.4 30.4-42.4 30.4z" fill="#E02020" p-id="30938"></path><path d="M772 864c-28.8 0-52-23.2-52-52s23.2-52 52-52 52 23.2 52 52-23.2 52-52 52z m0-88c-20 0-36 16-36 36s16 36 36 36 36-16 36-36-16-36-36-36z" fill="#074370" p-id="30939"></path><path d="M148.8 608.8m-44.8 0a44.8 44.8 0 1 0 89.6 0 44.8 44.8 0 1 0-89.6 0Z" fill="#FF4848" p-id="30940"></path><path d="M148.8 624.8c-20 0-36-12.8-42.4-30.4a44.72 44.72 0 0 0 42.4 59.2c24.8 0 44.8-20 44.8-44.8 0-4.8-0.8-10.4-2.4-14.4-6.4 17.6-22.4 30.4-42.4 30.4z" fill="#E02020" p-id="30941"></path><path d="M148 664c-28.8 0-52-23.2-52-52s23.2-52 52-52 52 23.2 52 52-23.2 52-52 52z m0-88C128 576 112 592 112 612s16 36 36 36 36-16 36-36-16-36-36-36z" fill="#074370" p-id="30942"></path><path d="M650.4 134.4c-2.4 0-4.8-1.6-6.4-4-1.6-3.2-4-3.2-4.8-4-4-0.8-10.4 2.4-12 3.2-4 2.4-8.8 1.6-11.2-1.6-2.4-3.2-1.6-8.8 1.6-11.2 1.6-0.8 12-8 24-6.4 6.4 0.8 12 4.8 15.2 11.2 2.4 4 1.6 8.8-2.4 11.2-1.6 1.6-3.2 1.6-4 1.6zM782.4 806.4c-2.4 0-4.8-1.6-6.4-4-1.6-3.2-4-3.2-4.8-4-4-0.8-10.4 2.4-12 3.2-4 2.4-8.8 1.6-11.2-1.6-2.4-3.2-1.6-8.8 1.6-11.2 1.6-0.8 12-8 24-6.4 6.4 0.8 12 4.8 15.2 11.2 2.4 4 1.6 8.8-2.4 11.2-0.8 1.6-2.4 1.6-4 1.6zM163.2 606.4c-2.4 0-4.8-1.6-6.4-4-1.6-3.2-4-3.2-4.8-4-4-0.8-10.4 2.4-12 3.2-4 2.4-8.8 1.6-11.2-1.6-2.4-3.2-1.6-8.8 1.6-11.2 1.6-0.8 12-8 24-6.4 6.4 0.8 12 4.8 15.2 11.2 2.4 4 1.6 8.8-2.4 11.2-1.6 0.8-3.2 1.6-4 1.6zM880 352c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM368 264c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM548 925.6c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c5.6-0.8 9.6-4 9.6-7.2zM189.6 315.2c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c6.4-1.6 9.6-4.8 9.6-7.2zM952.8 692c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 6.4-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c6.4-0.8 9.6-4 9.6-7.2z" fill="#FFFFFF" opacity=".5" p-id="30943"></path><path d="M609.6 484.8c0-3.2-3.2-6.4-8-7.2l-38.4-6.4c-4-0.8-8.8-4.8-9.6-9.6l-6.4-38.4c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-6.4 38.4c-0.8 4-4.8 8.8-9.6 9.6l-38.4 6.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l37.6 4.8c4 0.8 8.8 4.8 9.6 8.8l7.2 40c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l7.2-40.8c0.8-4 4.8-8 9.6-8.8l37.6-4.8c4 0 8-3.2 8-6.4z" fill="#FFFFFF" p-id="30944"></path></svg>`,
    robot: `<svg t="1683958734774" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="31276" width="128" height="128"><path d="M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z" fill="#FBD000" p-id="31277"></path><path d="M512 1024c80.8 0 156.8-18.4 224-52C724.8 857.6 627.2 768 508.8 768c-117.6 0-213.6 88-227.2 202.4 69.6 34.4 148 53.6 230.4 53.6z" fill="#3AD0F9" p-id="31278"></path><path d="M508 760c-120.8 0-220.8 88-236 204.8 4.8 2.4 10.4 5.6 15.2 8 11.2-112 106.4-196.8 220.8-196.8s208.8 85.6 220.8 200c4.8-2.4 10.4-4.8 15.2-7.2-15.2-120-116-208.8-236-208.8z" fill="#6B3C1C" p-id="31279"></path><path d="M543.2 796c0 18.4-12 33.6-29.6 33.6-18.4 0-34.4-15.2-34.4-33.6v-71.2c0-18.4 16-33.6 34.4-33.6s29.6 15.2 29.6 33.6v71.2z" fill="#F9D4CA" p-id="31280"></path><path d="M276 508m-43.2 0a43.2 43.2 0 1 0 86.4 0 43.2 43.2 0 1 0-86.4 0Z" fill="#F9D4CA" p-id="31281"></path><path d="M276 559.2c-28.8 0-51.2-23.2-51.2-51.2 0-28.8 23.2-51.2 51.2-51.2 28.8 0 51.2 23.2 51.2 51.2 0 28-23.2 51.2-51.2 51.2z m0-87.2c-20 0-35.2 16-35.2 35.2 0 20 16 35.2 35.2 35.2 20 0 35.2-16 35.2-35.2 0-19.2-16-35.2-35.2-35.2z" fill="#6B3C1C" p-id="31282"></path><path d="M747.2 508m-43.2 0a43.2 43.2 0 1 0 86.4 0 43.2 43.2 0 1 0-86.4 0Z" fill="#F9D4CA" p-id="31283"></path><path d="M514.4 840c-23.2 0-42.4-19.2-42.4-41.6v-72c0-23.2 19.2-41.6 42.4-41.6 21.6 0 37.6 17.6 37.6 41.6v72c0 24-16 41.6-37.6 41.6z m0-140c-14.4 0-26.4 12-26.4 25.6v72c0 13.6 12 25.6 26.4 25.6 15.2 0 21.6-13.6 21.6-25.6v-72c0-12-7.2-25.6-21.6-25.6zM747.2 559.2c-28.8 0-51.2-23.2-51.2-51.2 0-28.8 23.2-51.2 51.2-51.2 28.8 0 51.2 23.2 51.2 51.2 0.8 28-22.4 51.2-51.2 51.2z m0-87.2C728 472 712 488 712 508s16 35.2 35.2 35.2c20 0 35.2-16 35.2-35.2 0.8-20-15.2-36-35.2-36z" fill="#6B3C1C" p-id="31284"></path><path d="M511.2 218.4c119.2 0 216 96.8 216 216v86.4c0 119.2-96.8 216-216 216s-216-96.8-216-216V434.4c0-119.2 96.8-216 216-216z" fill="#F9D4CA" p-id="31285"></path><path d="M511.2 692c-119.2 0-216-96.8-216-216v44.8c0 119.2 96.8 216 216 216s216-96.8 216-216v-44.8c-0.8 119.2-96.8 216-216 216z" fill="#EFBFB4" p-id="31286"></path><path d="M512 743.2c-123.2 0-224-100-224-222.4V434.4c0-123.2 100.8-224 224-224s224 100 224 224v86.4c0 122.4-100.8 222.4-224 222.4z m0-516.8c-114.4 0-208 93.6-208 208v86.4c0 113.6 93.6 206.4 208 206.4s208-92.8 208-206.4V434.4c0-114.4-93.6-208-208-208z" fill="#6B3C1C" p-id="31287"></path><path d="M688 945.6c-3.2 0-6.4-1.6-7.2-4.8-4.8-12-9.6-22.4-14.4-32-2.4-4-0.8-8.8 3.2-11.2 4-2.4 8.8-0.8 11.2 3.2 5.6 10.4 10.4 21.6 15.2 34.4 1.6 4-0.8 8.8-4.8 10.4H688zM655.2 884.8c-2.4 0-4.8-0.8-6.4-3.2-20.8-28-44.8-40.8-64.8-49.6-4-1.6-5.6-6.4-4-10.4 1.6-4 6.4-5.6 10.4-4 22.4 10.4 48 23.2 71.2 55.2 2.4 3.2 1.6 8.8-1.6 11.2-1.6 0-3.2 0.8-4.8 0.8zM175.2 461.6c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8l-2.4 15.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c5.6-1.6 8.8-4 8.8-7.2zM603.2 85.6c0-3.2-3.2-6.4-8-7.2l-15.2-2.4c-4-0.8-8.8-4.8-8.8-8.8l-2.4-15.2c-0.8-4-4-8-7.2-8s-6.4 3.2-7.2 8L552 67.2c-0.8 4-4.8 8.8-8.8 8.8l-15.2 2.4c-4 0.8-8 4-8 7.2s3.2 6.4 8 7.2l15.2 2.4c4 0.8 8.8 4.8 8.8 8.8l2.4 15.2c0.8 4 4 8 7.2 8s6.4-3.2 7.2-8l2.4-16.8c0.8-4 4.8-8 8.8-8.8l14.4-0.8c5.6-1.6 8.8-4 8.8-7.2zM248 784c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM800 752c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 7.2 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8zM872 440c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z m0-48.8c-9.6 0-16.8 8-16.8 16.8 0 9.6 8 16.8 16.8 16.8 9.6 0 16.8-8 16.8-16.8 0-9.6-7.2-16.8-16.8-16.8z" fill="#FFFFFF" p-id="31288"></path><path d="M763.2 528.8c0 35.2-28.8 64-64 64H324.8c-35.2 0-64-28.8-64-64v-77.6c0-35.2 28.8-64 64-64h374.4c35.2 0 64 28.8 64 64v77.6z" fill="#415E6D" p-id="31289"></path><path d="M699.2 536H324.8c-35.2 0-64-38.4-64-73.6v66.4c0 35.2 28.8 64 64 64h374.4c35.2 0 64-28.8 64-64v-66.4c0 35.2-28.8 73.6-64 73.6z" fill="#2D4552" p-id="31290"></path><path d="M696 600H328c-40 0-72-32-72-72v-72c0-40 32-72 72-72h368c40 0 72 32 72 72v72.8c0 40-32 71.2-72 71.2zM328 400c-31.2 0-56 24.8-56 56v72c0 31.2 24.8 56 56 56l368 0.8v8-8c31.2 0 56-24.8 56-56V456c0-31.2-24.8-56-56-56H328zM536 659.2c0 16-12.8 28.8-28.8 28.8S480 675.2 480 659.2v-15.2c0-16 12-28.8 27.2-28.8 16 0 28.8 12.8 28.8 28.8v15.2z" fill="#6B3C1C" p-id="31291"></path><path d="M335.2 304s-4-97.6 97.6-137.6 185.6 56 249.6 46.4 80-38.4 80-38.4 0 132-110.4 153.6-244.8 33.6-316.8-24z" fill="#F99900" p-id="31292"></path><path d="M729.6 279.2c-99.2 48-195.2 42.4-269.6 24.8-86.4-20-95.2-76-95.2-76H360l-6.4 5.6c-20 36-18.4 70.4-18.4 70.4 72 57.6 208 46.4 318.4 24 36-7.2 60-26.4 76-48.8z" fill="#D6742B" p-id="31293"></path><path d="M506.4 360c-73.6 0-136-18.4-176-51.2-1.6-1.6-3.2-4-3.2-6.4 0-0.8-3.2-105.6 102.4-148 17.6-7.2 35.2-10.4 54.4-10.4 41.6 0 80 17.6 113.6 33.6 26.4 12 52 24 72.8 24 3.2 0 5.6 0 8.8-0.8 58.4-9.6 73.6-34.4 73.6-34.4 1.6-3.2 5.6-4.8 8.8-4 3.2 0.8 5.6 4 5.6 8 0 1.6-5.6 124-114.4 164-43.2 16.8-96 25.6-146.4 25.6zM344 298.4C380.8 328 438.4 344 506.4 344c48.8 0 99.2-8.8 141.6-24.8 72-26.4 94.4-92 100.8-127.2-12.8 8.8-33.6 19.2-67.2 24.8-3.2 0.8-7.2 0.8-11.2 0.8-24.8 0-51.2-12-79.2-25.6-32-15.2-68.8-32-107.2-32-16.8 0-32.8 3.2-48 9.6C351.2 204 344 280.8 344 298.4z" fill="#6B3C1C" p-id="31294"></path><path d="M712 432h-73.6c-4.8 0-8-3.2-8-8s3.2-8 8-8H712c4.8 0 8 3.2 8 8s-3.2 8-8 8zM581.6 432H319.2c-4.8 0-8-3.2-8-8s3.2-8 8-8h261.6c4.8 0 8 3.2 8 8s-3.2 8-7.2 8zM404 228c-2.4 0-4.8-0.8-5.6-2.4-3.2-3.2-2.4-8 0.8-11.2 1.6-1.6 38.4-34.4 84-34.4 51.2 0 100.8 30.4 103.2 32 4 2.4 4.8 7.2 2.4 11.2-2.4 4-7.2 4.8-11.2 2.4-0.8 0-47.2-29.6-94.4-29.6-39.2 0-72.8 29.6-73.6 29.6-1.6 1.6-4 2.4-5.6 2.4z" fill="#FFFFFF" opacity=".5" p-id="31295"></path></svg>`,
}

const exampleMap = {
    'summary': {
        'role': `统计一下班里的所有同学信息`,
        'demand': `输出JSON格式的数据，包含姓名和年龄信息`,
        'content': `小明今年8岁，在上小学，他班里还有2名同学小郑和小李，分别9岁和7岁`,
    },
    'code-generation': {
        'role': `你是一个前端开发工程师，请遵守前端最佳开发实践，生成代码`,
        'demand': `采用react框架，封装成组件，react和scss代码分开，尽量不要行内样式，语义化生成className，生成index.jsx和index.scss`,
        'content': `一个卡片组件，高度158px, 宽度310px，点击可以选中商品卡片，选中时卡片边框颜色变成#ff5000，背景色变成rgba(255,80,0,0.03)，点击可以触发自定义点击事件`,
    },
    'problem-solving': {
        'role': `判断用户给出的答案是否正确`,
        'demand': `按照步骤完成：1. 自己给出计算方法，计算出答案；2. 和用户的答案作比较，判断用户答案是否正确；3. 输出我的答案和判定结果`,
        'content': `问题：2只兔子和3只鸡一共几只脚？用户答案：5`,
    },
    'knowledge-base': {
        'role': `已知信息: 1只兔子有3只脚，一只鸡有2只脚`,
        'demand': `基于已知信息，简洁和专业的来回答用户的问题。如果无法从中得到答案，请说 "根据已知信息无法回答该问题" 或 "没有提供足够的相关信息"，不允许在答案中添加编造成分，答案请使用中文。`,
        'content': `2只兔子和3只鸡一共几只脚？`,
    },
    'robot-base': {
        'role': `你是订餐机器人，为披萨餐厅自动收集订单信息。`,
        'demand': `你要首先问候顾客。然后等待用户回复收集订单信息。收集完信息需确认顾客是否还需要添加其他内容。最后需要询问是否自取或外送，如果是外送，你要询问地址。最后告诉顾客订单总金额，并送上祝福。请确保明确所有选项、附加项和尺寸，以便从菜单中识别出该项唯一的内容。你的回应应该以简短、非常随意和友好的风格呈现。`,
        'content': `菜单包括：
菜品：
意式辣香肠披萨（大、中、小） 12.95、10.00、7.00
芝士披萨（大、中、小） 10.95、9.25、6.50
茄子披萨（大、中、小） 11.95、9.75、6.75
薯条（大、小） 4.50、3.50
希腊沙拉 7.25
配料：
奶酪 2.00
蘑菇 1.50
香肠 3.00
加拿大熏肉 3.50
AI酱 1.50
辣椒 1.00
饮料：
可乐（大、中、小） 3.00、2.00、1.00
雪碧（大、中、小） 3.00、2.00、1.00
瓶装水 5.00`,
    }
}


const exampleMapEnglish = {
    'summary': {
        'role': `I want you to count all the people in the class`,
        'demand': `Output data in JSON format, including name and age information`,
        'content': `Xiao Ming is eight years old. In primary school, there are two other students in his class, Xiao Zheng and Xiao Li, who are nine and seven years old respectively`,
    },
    'code-generation': {
        'role': `You are a front-end development engineer, please follow front-end best development practices and generate code`,
        'demand': `react framework is adopted and encapsulated into components. react and scss codes are separated, without inline styles, and semantically generated into className and index.jsx and index.scss are generated`,
        'content': `A card component with a height of 158px and a width of 310px. Click to select the merchandise card. When selected, the border color of the card changes to #ff5000 and the background color changes to rgba(255,80,0,0.03)`,
    },
    'problem-solving': {
        'role': `Determine whether the answer given by the user is correct`,
        'demand': `Follow the steps to complete: 1. Give the calculation method, calculate the answer; 2. Compare with the user's answer to determine whether the user's answer is correct; 3. Output my answer and judgment result`,
        'content': `Question: How many feet do two rabbits and three chickens have? User answer: 5`,
    },
    'knowledge-base': {
        'role': `Known information: A rabbit has three feet, a chicken has two feet`,
        'demand': `Answer users' questions succinctly and professionally, based on known information. If the answer cannot be obtained, please say "the question cannot be answered according to the known information" or "not enough relevant information is provided". It is not allowed to add fabrications in the answer, please use the answer in Chinese.`,
        'content': `How many feet do two rabbits and three chickens have?`,
    },
    'robot-base': {
        'role': `You are OrderBot, an automated service to collect orders for a pizza restaurant.`,
        'demand': `You first greet the customer, then collects the order, 
        and then asks if it's a pickup or delivery. 
        You wait to collect the entire order, then summarize it and check for a final 
        time if the customer wants to add anything else. 
        If it's a delivery, you ask for an address. 
        Finally you collect the payment.
        Make sure to clarify all options, extras and sizes to uniquely 
        identify the item from the menu.
        You respond in a short, very conversational friendly style. `,
        'content': `The menu includes 
        pepperoni pizza  12.95, 10.00, 7.00 
        cheese pizza   10.95, 9.25, 6.50 
        eggplant pizza   11.95, 9.75, 6.75 
        fries 4.50, 3.50 
        greek salad 7.25 
        Toppings: 
        extra cheese 2.00, 
        mushrooms 1.50 
        sausage 3.00 
        canadian bacon 3.50 
        AI sauce 1.50 
        peppers 1.00 
        Drinks: 
        coke 3.00, 2.00, 1.00 
        sprite 3.00, 2.00, 1.00 
        bottled water 5.00 `,
    }
}

// Set default values
const descMap = {
    'init': '你要用AI做什么？',
    'summary': '提取文本知识，翻译文本内容',
    'code-generation': '编故事写小说，生成代码',
    'problem-solving': '问题求解，推理重构代码',
    'knowledge-base': '基于本地知识问答',
    'robot-base': '生成对话机器人',
};

const descMapEnglish = {
    'init': 'What you want to do with AI？',
    'summary': 'Sumarize text content, Extract abstract',
    'code-generation': 'Write a story or Generate code',
    'problem-solving': 'Problem solving, inference refactoring code',
    'knowledge-base': 'Based on local knowledge',
    'robot-base': 'Generative conversation robot',
};

const iconMap = {
    'init': icons['init'],
    'summary': icons['text'],
    'code-generation': icons['code'],
    'problem-solving': icons['brain'],
    'knowledge-base': icons['knowledge'],
    'robot-base': icons['robot'],
};
const labelMap = [
    { key: 'init', value: '请选择一个目标' },
    { key: 'summary', value: '文本总结翻译' },
    { key: 'code-generation', value: '文本代码生成' },
    { key: 'problem-solving', value: '解题模型推理' },
    { key: 'knowledge-base', value: '本地知识问答' },
    { key: 'robot-base', value: 'AI机器人' },
];

const labelMapEnglish = [
    { key: 'init', value: 'Please select a target' },
    { key: 'summary', value: 'Text summary translation' },
    { key: 'code-generation', value: 'Text code generation' },
    { key: 'problem-solving', value: 'Problem Info solving' },
    { key: 'knowledge-base', value: 'Local knowledge query' },
    { key: 'robot-base', value: 'AI Robot' },
];

const formMap = {
    'role': '你想让AI扮演什么角色？',
    'demand': '对输出的要求是什么？',
    'content': '问题的具体内容是什么？',
    'button': '生成Prompt',
    'switch': '切换到英文'
};

const formMapEnglish = {
    'role': 'What role do you want the AI to play?',
    'demand': 'What are the requirements for output?',
    'content': 'What exactly is the question?',
    'button': 'Generate Prompt',
    'switch': 'Switch Chinese'
};

function makeTab(iconTxt, index, needtabIcon = true) {
    var tab = document.createElement('div');
    tab.className = `${clsprefix}-tab`;
    if (icons[iconTxt]) {
        tab.innerHTML = icons[iconTxt];
        tab.style.borderLeft = '0';
    } else {
        tab.innerText = iconTxt;
    }
    tab.setAttribute('data-index', index);
    if (needtabIcon) {
        const tempSvg = document.createElement('div');
        tempSvg.className = `${clsprefix}-tab-icon`;
        tempSvg.innerHTML = icons['init'];
        tab.appendChild(tempSvg);
    }
    return tab;
}

function makeContainer(i) {
    var container = document.createElement('div');
    container.className = `${clsprefix}-container`;
    return container;
}

function addTabEvt(tab) {
    // 点击选项卡切换container
    tab.addEventListener('click', function (e) {
        e.stopImmediatePropagation();
        var index = this.getAttribute('data-index');
        var containers = document.querySelectorAll(`.${clsprefix}-container`);
        currentContainer = containers[index];
        if (currentContainer.childNodes.length < 1) {
            setContainer(currentContainer, index);
        }
        setActiveTab(index);
    });
}

// 创建选项卡
var addTab = '＋';
var tabs = ['masks', 'P', addTab, 'setting'];
var tabCnt = 1;
for (var i = 0; i < tabs.length; i++) {

    var tab = makeTab(tabs[i], i, i == 1);
    sidebar.appendChild(tab);
    var container = makeContainer(i);
    containers.appendChild(container);

    if (tabs[i] === addTab) {
        tab.addEventListener('click', function (e) {
            e.stopImmediatePropagation();
            var sidebarLatest = document.querySelector(`.${clsprefix}-sidebar`);
            var containersLatest = document.querySelector(`.${clsprefix}-containers`);
            var idx = sidebarLatest.childNodes.length - 2;
            var newtab = makeTab(idx, idx);

            // 更新data-index
            sidebarLatest.lastChild.setAttribute('data-index', sidebarLatest.childNodes.length);
            last2child = sidebarLatest.childNodes[sidebarLatest.childNodes.length - 2];
            last2child.setAttribute('data-index', sidebarLatest.childNodes.length - 1);

            sidebarLatest.insertBefore(newtab, last2child);
            addTabEvt(newtab);

            var newContainer = makeContainer(idx);
            containersLatest.insertBefore(newContainer, containersLatest.childNodes[containersLatest.childNodes.length - 2]);
        });
    } else {
        addTabEvt(tab);
    }
}

function createIframe(src) {
    var iframe = document.createElement('iframe');
    iframe.className = `${clsprefix}-container-iframe`;
    iframe.src = src;
    return iframe;
}

// 将侧边栏和container添加到页面中
// document.body.innerHTML = '';
document.body.appendChild(sidebar);
document.body.appendChild(containers);

// 初始化选中第一个选项卡
setActiveTab(0);
setIntro(containers.childNodes[0]);
setSetting(containers.lastChild);

// 设置选中的选项卡和对应的container
function setActiveTab(index) {
    var tabs = document.querySelectorAll(`.${clsprefix}-tab`);
    var containers = document.querySelectorAll(`.${clsprefix}-container`);

    console.log('setActiveTab', index);
    if (tabs[index].classList.contains('active')) {
        tabs[index].classList.remove('active');
        containers[index].style.display = 'none';
    } else {
        // 取消之前选中的选项卡和container
        for (var i = 0; i < tabs.length; i++) {
            tabs[i].classList.remove('active');
            containers[i].style.display = 'none';
        }
        // 设置当前选中的选项卡和对应的container
        tabs[index].classList.add('active');
        containers[index].style.display = index > 0 ? 'flex' : 'block';
    }
}

function makeInputRow(label, cls) {
    const inputRow = document.createElement('div');
    inputRow.classList.add(`${clsprefix}-input-group`);
    inputRow.innerHTML = `
        <span class="${clsprefix}-input-group-text">${label}</span>
        <textarea class="${clsprefix}-form-control ${cls}" aria-label="With textarea"></textarea>
    `;
    return inputRow;
}

function makeButton(text) {
    const btn = document.createElement('button');
    btn.classList.add(`${clsprefix}-button`);
    btn.classList.add(`${clsprefix}-button-primary`);
    btn.innerText = text;
    return btn;
}

function makeOutput(text) {
    const output = document.createElement('div');
    output.classList.add(`${clsprefix}-ouput`);
    output.innerHTML = `
        <div class="${clsprefix}-ouput-head">
            <span>${text}</span>
            <span class="${clsprefix}-clipboard">${icons['clipboard']}<span style="display:none">copied!</span></span>
        </div>
        <div class="${clsprefix}-ouput-cont" contenteditable="true">
        
        </div>
    `;
    return output;
}

function makePrompt({ role, demand, content }) {
    return `
    ${role}
    <br/><br/>
    ${demand}
    <br/><br/>
    \`\`\`<br/>
    ${content}
    <br/>
    \`\`\`
    `
}

function getDescMap() {
    if (language === 'chinese') {
        return descMap;
    } else {
        return descMapEnglish;
    }
}

function getLabelMap() {
    if (language === 'chinese') {
        return labelMap;
    } else {
        return labelMapEnglish;
    }
}

function getFormMap() {
    if (language === 'chinese') {
        return formMap;
    } else {
        return formMapEnglish;
    }
}

function getExampleMap() {
    if (language === 'chinese') {
        return exampleMap;
    } else {
        return exampleMapEnglish;
    }
}

function setContainer(container, index) {
    // Create elements
    const leftCol = document.createElement('div');
    const leftRow1 = document.createElement('div');
    const leftRow1Select = document.createElement('select');
    leftRow1Select.classList.add(`${clsprefix}-select`);
    // Add content
    leftRow1Select.innerHTML = getLabelMap().map(lm => `<option value="${lm.key}">${lm.value}</option>`).join('');

    const leftRow1Desc = document.createElement('div');
    const leftRow1Left = document.createElement('div');
    const leftRow1Right = document.createElement('div');
    leftRow1Right.innerHTML = icons['init'];
    leftRow1Left.appendChild(leftRow1Select);
    leftRow1Right.appendChild(leftRow1Desc);
    leftRow1.appendChild(leftRow1Left);
    leftRow1.appendChild(leftRow1Right);

    // Add classes
    leftCol.classList.add(`${clsprefix}-left-col`);
    leftRow1.classList.add(`${clsprefix}-left-row`);
    leftRow1Left.classList.add(`${clsprefix}-left-row-left`);
    leftRow1Right.classList.add(`${clsprefix}-left-row-right`);
    leftRow1.classList.add(`${clsprefix}-left-row-header`);
    leftCol.appendChild(leftRow1);

    const formMap = getFormMap();
    leftCol.appendChild(makeInputRow(formMap.role, `${clsprefix}-role`));
    leftCol.appendChild(makeInputRow(formMap.demand, `${clsprefix}-demand`));
    leftCol.appendChild(makeInputRow(formMap.content, `${clsprefix}-content`));
    var button = makeButton(formMap.button)
    leftCol.appendChild(button);
    leftCol.appendChild(makeOutput('Effective AI Prompts：'));
    leftRow1Desc.textContent = getDescMap()[leftRow1Select.value];
    leftCol.querySelector(`.${clsprefix}-clipboard`).addEventListener('click', e => {
        e.stopImmediatePropagation();
        leftCol.querySelector(`.${clsprefix}-clipboard`).lastChild.style.display = 'inline';
        navigator.clipboard.writeText(leftCol.querySelector(`.${clsprefix}-ouput-cont`).innerText);
        setTimeout(() => {
            leftCol.querySelector(`.${clsprefix}-clipboard`).lastChild.style.display = 'none';
        }, 2e3);

    });
    button.addEventListener('click', e => {
        e.stopImmediatePropagation();
        leftCol.querySelector(`.${clsprefix}-ouput-cont`).innerHTML = makePrompt({
            role: leftCol.querySelector(`.${clsprefix}-role`).value,
            demand: leftCol.querySelector(`.${clsprefix}-demand`).value,
            content: leftCol.querySelector(`.${clsprefix}-content`).value,
        });
    });

    leftRow1Select.addEventListener('change', e => {
        e.stopImmediatePropagation();
        leftRow1Desc.textContent = getDescMap()[e.target.value];
        leftRow1Right.innerHTML = iconMap[e.target.value];
        leftRow1Right.appendChild(leftRow1Desc);
        var tabs = document.querySelectorAll(`.${clsprefix}-tab`);
        tabs[index].lastChild.innerHTML = iconMap[e.target.value];

        var eMap = getExampleMap();
        if (eMap[e.target.value]) {
            leftCol.querySelector(`.${clsprefix}-role`).value = eMap[e.target.value].role;
            leftCol.querySelector(`.${clsprefix}-demand`).value = eMap[e.target.value].demand;
            leftCol.querySelector(`.${clsprefix}-content`).value = eMap[e.target.value].content;
            leftCol.querySelector(`.${clsprefix}-ouput-cont`).innerHTML = makePrompt(eMap[e.target.value]);
        }
    });
    container.appendChild(leftCol);
}

function addTitle(titleContainer, titleArr) {
    for (var i = 0; i < titleArr.length; i++) {
        var titleSpan = document.createElement('span');
        titleSpan.innerText = titleArr[i];
        titleSpan.id = `title-${i}`;
        titleContainer.appendChild(titleSpan);
    }
}

function addDesc(container, text) {
    const txt = document.createElement('div');
    txt.classList.add(`${clsprefix}-desc`);
    txt.innerHTML = text;
    container.appendChild(txt);
}
function setIntro(container) {
    // Create elements
    const title = document.createElement('div');
    title.classList.add(`${clsprefix}-title`);
    addTitle(title, ['Create', 'Effective', 'AI', 'Prompts']);
    container.appendChild(title);

    const subtitle = document.createElement('div');
    subtitle.classList.add(`${clsprefix}-title`);
    subtitle.classList.add(`${clsprefix}-sub-title`);
    addTitle(subtitle, ['生成', '有效的', 'AI', '提示']);
    container.appendChild(subtitle);

    setTimeout(() => {
        title.classList.add(`active`);
        const logo = document.createElement('div');
        logo.classList.add(`${clsprefix}-title`);
        logo.innerHTML = icons['masks'];
        container.appendChild(logo);
        if (language === 'chinese') {
            addDesc(container, `
            <p>Rule1: 编写清晰明确的指令，清晰并不意味着写的简短，要尽量描述完整</p>
            <small>- 使用分隔符，比如 \`\`\`,""",''',--- 等等</small>
            <small>- 可以要求输出结构化信息，比如JSON格式</small>
            <small>- 要求检查满足指定条件输出</small>
            <small>- 给定一些案例提示</small>
            <br/>
            <p>Rule2: 给模型思考的时间</p>
            <small>- 指定任务完成的步骤</small>
            <small>- 让模型先自己计算结果，然后在作出结论，而不是直接推理</small>
            <br/>
            <p>Rule3: 减少模型幻觉</p>
            <small>- 要求模型先搜索相关的知识，然后基于相关知识来推理，如果没有相关信息就回答不知道，不要编造</small>
        `);
        } else {
            addDesc(container, `
            <p>Rule1: Make Clear and specific instructions, clear != short</p>
            <small>- Use delimiters，such as \`\`\`,""",''',--- etc. </small>
            <small>- ask structured output, such as JSON</small>
            <small>- Check where condition is satisified</small>
            <small>- Few-shot prompting</small>
            <br/>
            <p>Rule2: Give model time to think</p>
            <small>- Specify the step to complete a task</small>
            <small>- Instruct the model to work out its own solution before rushing to a conclution</small>
            <br/>
            <p>Rule3: Reduce hallucinations</p>
            <small>- First find relevant information, then answer the question based on the information, if don’t know just say I don’t know</small>
        `);
        }

    }, 1e3);
}

function setSetting(container) {
    const set = document.createElement('div');
    set.classList.add(`${clsprefix}-setting`);
    set.innerHTML = `
    <div class="${clsprefix}-form-item" >
        <label class="${clsprefix}-form-check-label" >${getFormMap().switch}</label>
        <input class="${clsprefix}-form-check-input ${clsprefix}-form-check-switch" ${language === 'chinese' ? 'checked' : ''} type="checkbox" role="switch">
    </div>
    `;
    set.querySelector(`.${clsprefix}-form-check-switch`).addEventListener('change', e => {
        e.stopImmediatePropagation();
        if (e.target.checked) {
            localStorage.setItem(`${clsprefix}-lang`, 'chinese');
        } else {
            localStorage.setItem(`${clsprefix}-lang`, 'english');
        }
        location.reload();
    });
    container.appendChild(set);
}

document.addEventListener('click', e => {
    var containers = document.querySelectorAll(`.${clsprefix}-container`);
    containers[0].style.display = 'none';

    var tabs = document.querySelectorAll(`.${clsprefix}-tab`);
    tabs[0].classList.remove('active');
})